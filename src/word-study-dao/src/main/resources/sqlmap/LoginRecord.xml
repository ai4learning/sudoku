<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.goldfish.dao.LoginRecordDao">

  <resultMap id="LoginRecord-Map" type="com.goldfish.domain.LoginRecord">
 		<id property="id" column="id"/>
		<result property="wordTrainingId" column="word_training_id"/>
		<result property="wordTraningCode" column="word_training_code"/>
		<result property="studyToken" column="study_token"/>
		<result property="userId" column="user_id"/>
		<result property="userCode" column="user_code"/>
		<result property="userName" column="user_name"/>
		<result property="state" column="state"/>
		<result property="created" column="created"/>
		<result property="modified" column="modified"/>

	</resultMap>


    <!-- 字段和bean里面一致，否则报错-->
	<sql id="BEAN-COMMON-SQL">
    	 
    		<where>
    		<if test="id != null"> AND id = #{id}</if>
    		<if test="wordTrainingId != null"> AND word_training_id = #{wordTrainingId}</if>
    		<if test="wordTrainingCode != null"> AND word_training_code = #{wordTrainingCode}</if>
    		<if test="userId != null"> AND user_id = #{userId}</if>
    		<if test="userName != null"> AND user_name = #{userName}</if>
    		<if test="state != null"> AND state = #{state}</if>
    		
    		</where>
    	 
    	</sql>


	<!-- 可以包含bean里面没有的字段-->
	<sql id="MAP-COMMON-SQL">
	   
		<where>
		<if test="id != null"> AND id = #{id}</if>
		<if test="wordTrainingId != null"> AND word_training_id = #{wordTrainingId}</if>
		<if test="wordTrainingCode != null"> AND word_training_code = #{wordTrainingCode}</if>
		<if test="userId != null"> AND user_id = #{userId}</if>
		<if test="userName != null"> AND user_name = #{userName}</if>
		<if test="state != null"> AND state = #{state}</if>
		
		</where>
	 	
	</sql>
	
	<sql id="ORDER-SQL">
	 order by id desc
	</sql>
	

	<sql id="All-FIELDS">
		id,word_training_id,word_training_code,study_token,user_id,user_code,user_name,state,created,modified
	</sql>

	<insert id="addLoginRecord" parameterType="com.goldfish.domain.LoginRecord">
		insert into login_record (word_training_id,word_training_code,study_token,user_id,user_code,user_name,state,created,modified)
			values(#{wordTrainingId},#{wordTraningCode},#{studyToken},#{userId},#{userCode},#{userName},#{state},#{created},#{modified})
    
		<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
		   select last_insert_id() as ID from dual
		</selectKey> 
   
	 </insert>

    
    <update id="updateLoginRecord" parameterType="com.goldfish.domain.LoginRecord" >
    	update  login_record 
	<set>
			<if test="wordTrainingId !=null"> word_training_id = #{wordTrainingId},</if>
			<if test="wordTraningCode !=null"> word_training_code = #{wordTraningCode},</if>
			<if test="studyToken !=null"> study_token = #{studyToken},</if>
			<if test="userId !=null"> user_id = #{userId},</if>
			<if test="userCode !=null"> user_code = #{userCode},</if>
			<if test="userName !=null"> user_name = #{userName},</if>
			<if test="state !=null"> state = #{state},</if>
			<if test="created !=null"> created = #{created},</if>
			<if test="modified !=null"> modified = #{modified},</if>

	</set>
	 where id = #{id}
  	</update>

	<update id="changeState" parameterType="java.util.HashMap" >
    	update  login_record
	<set>
			<if test="newState !=null"> state = #{newState},</if>
			 modified = now()
	</set>
	 where user_name = #{userName} AND state = #{oldState}
  	</update>

	<delete id="deleteLoginRecord" parameterType="com.goldfish.domain.LoginRecord">
		DELETE FROM login_record WHERE id = #{id}
	</delete>
	<select id="getLoginRecordById" resultMap="LoginRecord-Map" parameterType="java.lang.Long">
		SELECT  <include refid="All-FIELDS"/> FROM login_record	WHERE id = #{id}
	</select>  
    



	<select id="getUnique" resultMap="LoginRecord-Map" parameterType="com.goldfish.domain.LoginRecord">
		SELECT   <include refid="All-FIELDS"/> FROM login_record
            <include refid="BEAN-COMMON-SQL" /> limit 1
	</select>


	<select id="getListByExample" resultMap="LoginRecord-Map" parameterType="com.goldfish.domain.LoginRecord">
		SELECT   <include refid="All-FIELDS"/> FROM login_record
            <include refid="BEAN-COMMON-SQL" />
	</select>

	
	<select id="getLoginRecordByPage" resultMap="LoginRecord-Map" parameterType="java.util.HashMap">
		<![CDATA[
			SELECT  id,word_training_id,word_training_code,study_token,user_id,user_code,user_name,state,modified FROM login_record
		]]>
            <include refid="MAP-COMMON-SQL" />
            <include refid="ORDER-SQL" />
		LIMIT #{startIndex},#{pageSize}
	</select>
	
	<select id="count" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		<![CDATA[
			SELECT COUNT(1) FROM login_record
		]]>
		
              <include refid="MAP-COMMON-SQL" />
	</select>
	


</mapper>